"use strict";(self.webpackChunkfront_end_notes=self.webpackChunkfront_end_notes||[]).push([[2969],{667:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>l,data:()=>t});var e=a(641);const p={},l=(0,a(6262).A)(p,[["render",function(n,s){return(0,e.uX)(),(0,e.CE)("div",null,s[0]||(s[0]=[(0,e.Fv)('<h1 id="leetcode题目" tabindex="-1"><a class="header-anchor" href="#leetcode题目"><span>leetcode题目</span></a></h1><h3 id="f136-只出现一次的数字" tabindex="-1"><a class="header-anchor" href="#f136-只出现一次的数字"><span>F136. 只出现一次的数字</span></a></h3><ol><li>异或运算，^，先会把两边的数字转换为二进制，然后进行异或运算，如果两边的数字相同，那么结果就是0，如果两边的数字不相同，那么结果就是1</li><li>for of和for in的区别:for of遍历的是数组/对象中的值，for in遍历的是对象中的键</li></ol><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token doc-comment comment">/**</span>\n<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums</span></span>\n<span class="line"> * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span></span>\n<span class="line"> */</span></span>\n<span class="line"><span class="token keyword">var</span> <span class="token function-variable function">singleNumber</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">let</span> ans <span class="token operator">=</span> <span class="token number">0</span></span>\n<span class="line">    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> element <span class="token keyword">of</span> nums<span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">        ans<span class="token operator">^=</span> element</span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token keyword">return</span> ans</span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',4)]))}]]),t=JSON.parse('{"path":"/posts/leetcode%E9%A2%98%E7%9B%AE.html","title":"leetcode题目","lang":"zh-CN","frontmatter":{"date":"2024-12-03T00:00:00.000Z","category":["CategoryA"],"tag":["argorithm","tag B"]},"headers":[{"level":3,"title":"F136. 只出现一次的数字","slug":"f136-只出现一次的数字","link":"#f136-只出现一次的数字","children":[]}],"git":{"updatedTime":1733288337000,"contributors":[{"name":"namewyf","email":"wyf19892552132@163.com","commits":1}]},"filePathRelative":"posts/leetcode题目.md","excerpt":"\\n<h3>F136. 只出现一次的数字</h3>\\n<ol>\\n<li>异或运算，^，先会把两边的数字转换为二进制，然后进行异或运算，如果两边的数字相同，那么结果就是0，如果两边的数字不相同，那么结果就是1</li>\\n<li>for of和for in的区别:for of遍历的是数组/对象中的值，for in遍历的是对象中的键</li>\\n</ol>\\n<div class=\\"language-javascript line-numbers-mode\\" data-highlighter=\\"prismjs\\" data-ext=\\"js\\" data-title=\\"js\\"><pre><code><span class=\\"line\\"><span class=\\"token doc-comment comment\\">/**</span>\\n<span class=\\"line\\"> * <span class=\\"token keyword\\">@param</span> <span class=\\"token class-name\\"><span class=\\"token punctuation\\">{</span>number<span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">}</span></span> <span class=\\"token parameter\\">nums</span></span>\\n<span class=\\"line\\"> * <span class=\\"token keyword\\">@return</span> <span class=\\"token class-name\\"><span class=\\"token punctuation\\">{</span>number<span class=\\"token punctuation\\">}</span></span></span>\\n<span class=\\"line\\"> */</span></span>\\n<span class=\\"line\\"><span class=\\"token keyword\\">var</span> <span class=\\"token function-variable function\\">singleNumber</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">nums</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span></span>\\n<span class=\\"line\\">    <span class=\\"token keyword\\">let</span> ans <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span></span>\\n<span class=\\"line\\">    <span class=\\"token keyword\\">for</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">const</span> element <span class=\\"token keyword\\">of</span> nums<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span></span>\\n<span class=\\"line\\">        ans<span class=\\"token operator\\">^=</span> element</span>\\n<span class=\\"line\\">    <span class=\\"token punctuation\\">}</span></span>\\n<span class=\\"line\\">    <span class=\\"token keyword\\">return</span> ans</span>\\n<span class=\\"line\\"><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\"></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}')}}]);