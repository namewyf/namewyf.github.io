"use strict";(self.webpackChunkfront_end_notes=self.webpackChunkfront_end_notes||[]).push([[9712],{898:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>t,data:()=>o});var p=a(641);const e={},t=(0,a(6262).A)(e,[["render",function(n,s){return(0,p.uX)(),(0,p.CE)("div",null,s[0]||(s[0]=[(0,p.Fv)('<h1 id="leetcode-day-7" tabindex="-1"><a class="header-anchor" href="#leetcode-day-7"><span>leetcode day 7</span></a></h1><h2 id="刷题内容和建议" tabindex="-1"><a class="header-anchor" href="#刷题内容和建议"><span><a href="https://docs.qq.com/doc/DUElCb1NyTVpXa0Jj" target="_blank" rel="noopener noreferrer">刷题内容和建议</a></span></a></h2><h2 id="_454-四数相加ii" tabindex="-1"><a class="header-anchor" href="#_454-四数相加ii"><span>454.四数相加II</span></a></h2><p><a href="https://leetcode.cn/problems/4sum-ii/" target="_blank" rel="noopener noreferrer">https://leetcode.cn/problems/4sum-ii/</a></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token doc-comment comment">/**</span>\n<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums1</span></span>\n<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums2</span></span>\n<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums3</span></span>\n<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums4</span></span>\n<span class="line"> * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span></span>\n<span class="line"> */</span></span>\n<span class="line"><span class="token keyword">var</span> <span class="token function-variable function">fourSumCount</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">nums1<span class="token punctuation">,</span> nums2<span class="token punctuation">,</span> nums3<span class="token punctuation">,</span> nums4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">let</span> n <span class="token operator">=</span> nums1<span class="token punctuation">.</span>length</span>\n<span class="line">    <span class="token keyword">let</span> map1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>\n<span class="line">    <span class="token keyword">let</span> nums <span class="token operator">=</span> <span class="token number">0</span></span>\n<span class="line">    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> n1 <span class="token keyword">of</span> nums1<span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> n2 <span class="token keyword">of</span> nums2<span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">            <span class="token keyword">let</span> sum <span class="token operator">=</span> n1 <span class="token operator">+</span> n2</span>\n<span class="line">            map1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>sum<span class="token punctuation">,</span><span class="token punctuation">(</span>map1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span><span class="token operator">||</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> n3 <span class="token keyword">of</span> nums3<span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> n4 <span class="token keyword">of</span> nums4<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//为什么要用const</span></span>\n<span class="line">            <span class="token keyword">let</span> sum <span class="token operator">=</span> n3 <span class="token operator">+</span> n4</span>\n<span class="line">            <span class="token keyword">if</span><span class="token punctuation">(</span>map1<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token operator">-</span>sum<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//acm模式如何调试？</span></span>\n<span class="line">                nums<span class="token operator">+=</span>map1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token operator">-</span>sum<span class="token punctuation">)</span><span class="token comment">//这里不应该只是nums++</span></span>\n<span class="line">            <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token keyword">return</span> nums</span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="t383-赎金信" tabindex="-1"><a class="header-anchor" href="#t383-赎金信"><span>T383. 赎金信</span></a></h2><p><a href="https://leetcode.cn/problems/ransom-note/description/" target="_blank" rel="noopener noreferrer">https://leetcode.cn/problems/ransom-note/description/</a></p><p>1.map.set(magazine[i],(map.get(magazine[i])||0)+1)这里的写法值得学习，特别是||的使用</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token doc-comment comment">/**</span>\n<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">ransomNote</span></span>\n<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">magazine</span></span>\n<span class="line"> * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>boolean<span class="token punctuation">}</span></span></span>\n<span class="line"> */</span></span>\n<span class="line"><span class="token keyword">var</span> <span class="token function-variable function">canConstruct</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">ransomNote<span class="token punctuation">,</span> magazine</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">let</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>\n<span class="line">    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>magazine<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">        map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>magazine<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>magazine<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">//这里值得学习</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>ransomNote<span class="token punctuation">.</span>length<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">if</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>ransomNote<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">            map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>ransomNote<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>ransomNote<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span></span>\n<span class="line">        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span></span>\n<span class="line">            <span class="token keyword">return</span> <span class="token boolean">false</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token keyword">return</span> <span class="token boolean">true</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_15-三数之和" tabindex="-1"><a class="header-anchor" href="#_15-三数之和"><span>15. 三数之和</span></a></h2><p><a href="https://leetcode.cn/problems/3sum/description/" target="_blank" rel="noopener noreferrer">https://leetcode.cn/problems/3sum/description/</a></p><h2 id="_18-四数之和" tabindex="-1"><a class="header-anchor" href="#_18-四数之和"><span>18. 四数之和</span></a></h2>',12)]))}]]),o=JSON.parse('{"path":"/posts/leetcode-day-7.html","title":"leetcode day 7","lang":"zh-CN","frontmatter":{"date":"2024-11-05T00:00:00.000Z","category":["CategoryA"],"tag":["argorithm","tag B"]},"headers":[{"level":2,"title":"刷题内容和建议","slug":"刷题内容和建议","link":"#刷题内容和建议","children":[]},{"level":2,"title":"454.四数相加II","slug":"_454-四数相加ii","link":"#_454-四数相加ii","children":[]},{"level":2,"title":"T383. 赎金信","slug":"t383-赎金信","link":"#t383-赎金信","children":[]},{"level":2,"title":"15. 三数之和","slug":"_15-三数之和","link":"#_15-三数之和","children":[]},{"level":2,"title":"18. 四数之和","slug":"_18-四数之和","link":"#_18-四数之和","children":[]}],"git":{"updatedTime":1730899330000,"contributors":[{"name":"namewyf","email":"wyf19892552132@163.com","commits":2}]},"filePathRelative":"posts/leetcode-day-7.md","excerpt":"\\n<h2><a class=\\"header-anchor\\" href=\\"#刷题内容和建议\\"><span></span></a><a href=\\"https://docs.qq.com/doc/DUElCb1NyTVpXa0Jj\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">刷题内容和建议</a></h2>\\n<h2>454.四数相加II</h2>\\n<p><a href=\\"https://leetcode.cn/problems/4sum-ii/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://leetcode.cn/problems/4sum-ii/</a></p>"}')}}]);