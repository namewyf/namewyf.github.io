"use strict";(self.webpackChunkfront_end_notes=self.webpackChunkfront_end_notes||[]).push([[524],{2798:(n,a,s)=>{s.d(a,{l:()=>e});const e={category:{"/":{path:"/category/",map:{History:{path:"/category/history/",indexes:[0,1]},CategoryA:{path:"/category/categorya/",indexes:[2,3,4,5,6,7,8,9,10,11,12,13,14,15]},CategoryC:{path:"/category/categoryc/",indexes:[16,17,18,19,20]}}}},tag:{"/":{path:"/tag/",map:{WWI:{path:"/tag/wwi/",indexes:[1]},WWII:{path:"/tag/wwii/",indexes:[0]},"tag A":{path:"/tag/tag-a/",indexes:[15]},"tag B":{path:"/tag/tag-b/",indexes:[2,3,4,5,6,7,8,9,10,11,12,13,14,15]},argorithm:{path:"/tag/argorithm/",indexes:[2,3,4,5,6,7,8,9,10,11,12,13,14]},"tag E":{path:"/tag/tag-e/",indexes:[16,17,18,19,20]}}}}}},8589:(n,a,s)=>{s.d(a,{M:()=>e});const e=["/posts/archive2.html","/posts/archive1.html","/posts/%E5%B8%B8%E8%A7%81%E7%9A%84%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%89%8B%E6%AE%B5.html","/posts/vuepress%E5%BB%BA%E7%AB%99%E9%85%8D%E7%BD%AE.html","/posts/leetcode-day-x.html","/posts/leetcode-day-9.html","/posts/leetcode-day-8.html","/posts/leetcode-day-7.html","/posts/leetcode-day-6.html","/posts/leetcode-day-4.html","/posts/leetcode-day-3.html","/posts/leetcode-day-2.html","/posts/leetcode-day-14.html","/posts/leetcode-day-10.html","/posts/leetcode-day-1.html","/posts/article1.html","/posts/%E7%AE%97%E6%B3%95.html","/posts/%E5%AE%9E%E4%B9%A0%E7%AC%94%E8%AE%B0.html","/posts/%E5%A6%82%E4%BD%95%E7%BB%99GitHub%E9%A1%B9%E7%9B%AE%E6%8F%90%E4%BA%A4pr.html","/posts/%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E9%A1%B9%E7%9B%AE.html","/posts/%E5%85%AB%E8%82%A1%E6%96%87.html"]},594:(n,a,s)=>{s.d(a,{U:()=>e});const e={article:{"/":{path:"/article/",indexes:[19,20,17,16,12,18,13,5,6,9,8,7,4,10,2,11,14,3,15]}},timeline:{"/":{path:"/timeline/",indexes:[17,12,20,19,18,16,13,5,6,9,8,7,4,10,2,11,14,3,15,0,1]}}}},1417:(n,a,s)=>{s.d(a,{B:()=>Q});var e={};s.r(e),s.d(e,{default:()=>k});var t={};s.r(t),s.d(t,{default:()=>g});var p={};s.r(p),s.d(p,{default:()=>M});var o=s(6358),l=s(355),c=s(457),i=s(3349),r=s(5436),d=s(1599),u=s(6385);const k={setup(){(0,u._)()}};var h=s(1781),m=s(9212);const g={enhance:({app:n})=>{n.component("CodeTabs",h.S),n.component("Tabs",m.t)}};var v=s(8913),b=s(9700),y=s(8278),f=s(641),E=s(953),A=s(6076),w=s(7913),B=s(33);const _={class:"article-wrapper"},C={key:0},T=["onClick"],x={class:"title"},L={class:"article-info"},H={key:0,class:"author"},I={key:1,class:"date"},W={key:2,class:"category"},D={key:3,class:"tag"},q=["innerHTML"],U={__name:"ArticleList",props:{items:{type:Array,required:!0},isTimeline:Boolean},setup:n=>(a,s)=>((0,f.uX)(),(0,f.CE)("div",_,[n.items.length?(0,f.Q3)("",!0):((0,f.uX)(),(0,f.CE)("div",C,"Nothing in here.")),((0,f.uX)(!0),(0,f.CE)(f.FK,null,(0,f.pI)(n.items,(({info:e,path:t})=>((0,f.uX)(),(0,f.CE)("article",{key:t,class:"article",onClick:n=>a.$router.push(t)},[(0,f.Lk)("header",x,(0,B.v_)((n.isTimeline?`${new Date(e.date).toLocaleDateString()}: `:"")+e.title),1),s[0]||(s[0]=(0,f.Lk)("hr",null,null,-1)),(0,f.Lk)("div",L,[e.author?((0,f.uX)(),(0,f.CE)("span",H,"Author: "+(0,B.v_)(e.author),1)):(0,f.Q3)("",!0),e.date&&!n.isTimeline?((0,f.uX)(),(0,f.CE)("span",I,"Date: "+(0,B.v_)(new Date(e.date).toLocaleDateString()),1)):(0,f.Q3)("",!0),e.category?((0,f.uX)(),(0,f.CE)("span",W,"Category: "+(0,B.v_)(e.category.join(", ")),1)):(0,f.Q3)("",!0),e.tag?((0,f.uX)(),(0,f.CE)("span",D,"Tag: "+(0,B.v_)(e.tag.join(", ")),1)):(0,f.Q3)("",!0)]),e.excerpt?((0,f.uX)(),(0,f.CE)("div",{key:0,class:"excerpt",innerHTML:e.excerpt},null,8,q)):(0,f.Q3)("",!0)],8,T)))),128))]))},Z={class:"page"},F={__name:"Article",setup(n){const a=(0,A.Om)("article");return(n,s)=>((0,f.uX)(),(0,f.Wv)(w.A,null,{page:(0,f.k6)((()=>[(0,f.Lk)("main",Z,[(0,f.bF)(U,{items:(0,E.R1)(a).items},null,8,["items"])])])),_:1}))}},R={class:"page"},j={class:"category-wrapper"},X={class:"category-num"},N={__name:"Category",setup(n){const a=(0,y.lq)(),s=(0,A.es)("category");return(n,e)=>((0,f.uX)(),(0,f.Wv)(w.A,null,{page:(0,f.k6)((()=>[(0,f.Lk)("main",R,[(0,f.Lk)("div",j,[((0,f.uX)(!0),(0,f.CE)(f.FK,null,(0,f.pI)((0,E.R1)(s).map,(({items:n,path:s},e)=>((0,f.uX)(),(0,f.Wv)((0,E.R1)(y.Wt),{key:e,to:s,active:(0,E.R1)(a).path===s,class:"category"},{default:(0,f.k6)((()=>[(0,f.eW)((0,B.v_)(e)+" ",1),(0,f.Lk)("span",X,(0,B.v_)(n.length),1)])),_:2},1032,["to","active"])))),128))]),(0,f.bF)(U,{items:(0,E.R1)(s).currentItems??[]},null,8,["items"])])])),_:1}))}},G={class:"page"},S={class:"tag-wrapper"},O={class:"tag-num"},V={__name:"Tag",setup(n){const a=(0,y.lq)(),s=(0,A.es)("tag");return(n,e)=>((0,f.uX)(),(0,f.Wv)(w.A,null,{page:(0,f.k6)((()=>[(0,f.Lk)("main",G,[(0,f.Lk)("div",S,[((0,f.uX)(!0),(0,f.CE)(f.FK,null,(0,f.pI)((0,E.R1)(s).map,(({items:n,path:s},e)=>((0,f.uX)(),(0,f.Wv)((0,E.R1)(y.Wt),{key:e,to:s,active:(0,E.R1)(a).path===s,class:"tag"},{default:(0,f.k6)((()=>[(0,f.eW)((0,B.v_)(e)+" ",1),(0,f.Lk)("span",O,(0,B.v_)(n.length),1)])),_:2},1032,["to","active"])))),128))]),(0,f.bF)(U,{items:(0,E.R1)(s).currentItems??[]},null,8,["items"])])])),_:1}))}},J={class:"page"},Y={__name:"Timeline",setup(n){const a=(0,A.Om)("timeline");return(n,s)=>((0,f.uX)(),(0,f.Wv)(w.A,null,{page:(0,f.k6)((()=>[(0,f.Lk)("main",J,[s[0]||(s[0]=(0,f.Lk)("h1",{class:"timeline-title"},"Timeline",-1)),(0,f.bF)(U,{items:(0,E.R1)(a).items,"is-timeline":""},null,8,["items"])])])),_:1}))}},M=(0,y.re)({layouts:{Article:F,Category:N,Tag:V,Timeline:Y}}),Q=[o,l,c,i,r,d,e,t,v,b,p].map((n=>n.default)).filter(Boolean)},6159:(n,a,s)=>{s.d(a,{J:()=>t,c:()=>e});const e=JSON.parse("{}"),t=Object.fromEntries([["/",{loader:()=>s.e(470).then(s.bind(s,5588)),meta:{title:"前端notes"}}],["/get-started.html",{loader:()=>s.e(642).then(s.bind(s,2621)),meta:{title:"Get Started"}}],["/posts/archive1.html",{loader:()=>s.e(277).then(s.bind(s,9976)),meta:{_blog:{title:"Archive Article1",author:"",date:"1998-01-01T00:00:00.000Z",category:["History"],tag:["WWI"],excerpt:"\n<h2>Heading 2</h2>\n<p>Here is the content.</p>\n<h3>Heading 3</h3>\n<p>Here is the content.</p>\n"},title:"Archive Article1"}}],["/posts/archive2.html",{loader:()=>s.e(408).then(s.bind(s,9202)),meta:{_blog:{title:"Archive Article2",author:"",date:"1998-01-02T00:00:00.000Z",category:["History"],tag:["WWII"],excerpt:"\n<h2>Heading 2</h2>\n<p>Here is the content.</p>\n<h3>Heading 3</h3>\n<p>Here is the content.</p>\n"},title:"Archive Article2"}}],["/posts/article1.html",{loader:()=>s.e(993).then(s.bind(s,5710)),meta:{_blog:{title:"Article 1",author:"",date:"2022-01-01T00:00:00.000Z",category:["CategoryA"],tag:["tag A","tag B"],excerpt:"\n<h2>Heading 2</h2>\n<p>Here is the content.</p>\n<h3>Heading 3</h3>\n<p>Here is the content.</p>\n"},title:"Article 1"}}],["/posts/leetcode-day-1.html",{loader:()=>s.e(146).then(s.bind(s,3653)),meta:{_blog:{title:"Leetcode day 1",author:"",date:"2024-10-31T00:00:00.000Z",category:["CategoryA"],tag:["argorithm","tag B"],excerpt:'\n<h2><a class="header-anchor" href="#刷题内容和建议"><span></span></a><a href="https://docs.qq.com/doc/DUG9UR2ZUc3BjRUdY" target="_blank" rel="noopener noreferrer">刷题内容和建议</a></h2>\n<h2>704.二分查找</h2>\n<p><a href="https://leetcode.cn/problems/binary-search/" target="_blank" rel="noopener noreferrer">https://leetcode.cn/problems/binary-search/</a></p>'},title:"Leetcode day 1"}}],["/posts/leetcode-day-10.html",{loader:()=>s.e(708).then(s.bind(s,8896)),meta:{_blog:{title:"leetcode day 10",author:"",date:"2024-11-08T00:00:00.000Z",category:["CategoryA"],tag:["argorithm","tag B"],excerpt:'\n<h2><a class="header-anchor" href="#刷题内容和建议"><span></span></a><a href="https://docs.qq.com/doc/DUG1mZ3pib0J0T05T" target="_blank" rel="noopener noreferrer">刷题内容和建议</a></h2>\n<h2>232. 用栈实现队列</h2>\n<p>1.定义一个数据结构的时候他的属性要有默认值，比如这里要有默认值为空数组，否则就是undefined<br>\n2.方法对于属性值的调用，记得一定要写this呀<br>\n3.不同的并列的方法可以相互调用，要学会善用这一方法，省下很多功夫</p>'},title:"leetcode day 10"}}],["/posts/leetcode-day-14.html",{loader:()=>s.e(336).then(s.bind(s,5961)),meta:{_blog:{title:"leetcode day 14",author:"",date:"2024-11-12T00:00:00.000Z",category:["CategoryA"],tag:["argorithm","tag B"],excerpt:'\n<h2><a class="header-anchor" href="#刷题内容和建议"><span></span></a><a href="https://docs.qq.com/doc/DUHN0ZVJuRmVYeWNv" target="_blank" rel="noopener noreferrer">刷题内容和建议</a></h2>\n<h2>226.翻转二叉树 （优先掌握递归）</h2>\n<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token doc-comment comment">/**</span>\n<span class="line"> * Definition for a binary tree node.</span>\n<span class="line"> * function TreeNode(val, left, right) <span class="token punctuation">{</span></span>\n<span class="line"> *     this.val = (val===undefined ? 0 : val)</span>\n<span class="line"> *     this.left = (left===undefined ? null : left)</span>\n<span class="line"> *     this.right = (right===undefined ? null : right)</span>\n<span class="line"> * <span class="token punctuation">}</span></span>\n<span class="line"> */</span></span>\n<span class="line"><span class="token doc-comment comment">/**</span>\n<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>TreeNode<span class="token punctuation">}</span></span> <span class="token parameter">root</span></span>\n<span class="line"> * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>TreeNode<span class="token punctuation">}</span></span></span>\n<span class="line"> */</span></span>\n<span class="line"><span class="token keyword">var</span> <span class="token function-variable function">invertTree</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    </span>\n<span class="line">    <span class="token keyword">function</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">if</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">            <span class="token punctuation">[</span>root<span class="token punctuation">.</span>left<span class="token punctuation">,</span>root<span class="token punctuation">.</span>right<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>root<span class="token punctuation">.</span>right<span class="token punctuation">,</span>root<span class="token punctuation">.</span>left<span class="token punctuation">]</span></span>\n<span class="line">            <span class="token function">func</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">)</span></span>\n<span class="line">            <span class="token function">func</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">)</span></span>\n<span class="line">            <span class="token keyword">return</span></span>\n<span class="line">        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span></span>\n<span class="line">            <span class="token keyword">return</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token function">func</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span></span>\n<span class="line">    <span class="token keyword">return</span> root</span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>'},title:"leetcode day 14"}}],["/posts/leetcode-day-2.html",{loader:()=>s.e(227).then(s.bind(s,1275)),meta:{_blog:{title:"Leetcode day 2",author:"",date:"2024-11-03T00:00:00.000Z",category:["CategoryA"],tag:["argorithm","tag B"],excerpt:'\n<h2><a class="header-anchor" href="#刷题内容和建议"><span></span></a><a href="https://docs.qq.com/doc/DUGRwWXNOVEpyaVpG" target="_blank" rel="noopener noreferrer">刷题内容和建议</a></h2>\n<h2>209.长度最小的子数组</h2>\n<p><a href="https://leetcode.cn/problems/minimum-size-subarray-sum/" target="_blank" rel="noopener noreferrer">https://leetcode.cn/problems/minimum-size-subarray-sum/</a></p>'},title:"Leetcode day 2"}}],["/posts/leetcode-day-3.html",{loader:()=>s.e(644).then(s.bind(s,3220)),meta:{_blog:{title:"Leetcode day 3",author:"",date:"2024-11-04T00:00:00.000Z",category:["CategoryA"],tag:["argorithm","tag B"],excerpt:'\n<h2><a class="header-anchor" href="#刷题内容和建议"><span></span></a><a href="https://docs.qq.com/doc/DUGdqYWNYeGhlaVR6" target="_blank" rel="noopener noreferrer">刷题内容和建议</a></h2>\n<h2>203.移除链表元素</h2>\n<p><a href="https://leetcode.cn/problems/remove-linked-list-elements/description/" target="_blank" rel="noopener noreferrer">https://leetcode.cn/problems/remove-linked-list-elements/description/</a></p>'},title:"Leetcode day 3"}}],["/posts/leetcode-day-4.html",{loader:()=>s.e(661).then(s.bind(s,6389)),meta:{_blog:{title:"leetcode day 4",author:"",date:"2024-11-05T00:00:00.000Z",category:["CategoryA"],tag:["argorithm","tag B"],excerpt:'\n<p><a href="https://docs.qq.com/doc/DUFNjYUxYRHRVWklp" target="_blank" rel="noopener noreferrer">刷题内容和建议</a></p>\n<h2>24. 两两交换链表中的节点</h2>\n<p><a href="https://leetcode.cn/problems/swap-nodes-in-pairs/description/" target="_blank" rel="noopener noreferrer">https://leetcode.cn/problems/swap-nodes-in-pairs/description/</a>\n注意画图，以防弄错</p>'},title:"leetcode day 4"}}],["/posts/leetcode-day-6.html",{loader:()=>s.e(183).then(s.bind(s,4566)),meta:{_blog:{title:"leetcode day 6",author:"",date:"2024-11-05T00:00:00.000Z",category:["CategoryA"],tag:["argorithm","tag B"],excerpt:'\n<h2><a class="header-anchor" href="#刷题内容和建议"><span></span></a><a href="https://docs.qq.com/doc/DUEtFSGdreWRuR2p4" target="_blank" rel="noopener noreferrer">刷题内容和建议</a></h2>\n<h2>242.有效的字母异位词</h2>\n<p><a href="https://leetcode.cn/problems/valid-anagram/" target="_blank" rel="noopener noreferrer">https://leetcode.cn/problems/valid-anagram/</a></p>'},title:"leetcode day 6"}}],["/posts/leetcode-day-7.html",{loader:()=>s.e(712).then(s.bind(s,898)),meta:{_blog:{title:"leetcode day 7",author:"",date:"2024-11-05T00:00:00.000Z",category:["CategoryA"],tag:["argorithm","tag B"],excerpt:'\n<h2><a class="header-anchor" href="#刷题内容和建议"><span></span></a><a href="https://docs.qq.com/doc/DUElCb1NyTVpXa0Jj" target="_blank" rel="noopener noreferrer">刷题内容和建议</a></h2>\n<h2>454.四数相加II</h2>\n<p><a href="https://leetcode.cn/problems/4sum-ii/" target="_blank" rel="noopener noreferrer">https://leetcode.cn/problems/4sum-ii/</a></p>'},title:"leetcode day 7"}}],["/posts/leetcode-day-8.html",{loader:()=>s.e(313).then(s.bind(s,5425)),meta:{_blog:{title:"leetcode day 8",author:"",date:"2024-11-06T00:00:00.000Z",category:["CategoryA"],tag:["argorithm","tag B"],excerpt:'\n<h2><a class="header-anchor" href="#刷题内容和建议"><span></span></a><a href="https://docs.qq.com/doc/DUGdsY2JFaFhDRVZH" target="_blank" rel="noopener noreferrer">刷题内容和建议</a></h2>\n<h2>344. 反转字符串</h2>\n<p><a href="https://leetcode.cn/problems/reverse-string/description/" target="_blank" rel="noopener noreferrer">https://leetcode.cn/problems/reverse-string/description/</a></p>'},title:"leetcode day 8"}}],["/posts/leetcode-day-9.html",{loader:()=>s.e(650).then(s.bind(s,8246)),meta:{_blog:{title:"leetcode day 9",author:"",date:"2024-11-07T00:00:00.000Z",category:["CategoryA"],tag:["argorithm","tag B"],excerpt:'\n<h2><a class="header-anchor" href="#刷题内容和建议"><span></span></a><a href="https://docs.qq.com/doc/DUHVXSnZNaXpVUHN4" target="_blank" rel="noopener noreferrer">刷题内容和建议</a></h2>\n<h2>151. 反转字符串中的单词</h2>\n<p><a href="https://leetcode.cn/problems/reverse-words-in-a-string/description/" target="_blank" rel="noopener noreferrer">https://leetcode.cn/problems/reverse-words-in-a-string/description/</a></p>'},title:"leetcode day 9"}}],["/posts/leetcode-day-x.html",{loader:()=>s.e(481).then(s.bind(s,2745)),meta:{_blog:{title:"leetcode day x",author:"",date:"2024-11-05T00:00:00.000Z",category:["CategoryA"],tag:["argorithm","tag B"],excerpt:'\n<h2><a class="header-anchor" href="#刷题内容和建议"><span></span></a><a href="https://docs.qq.com/doc/DUEtFSGdreWRuR2p4" target="_blank" rel="noopener noreferrer">刷题内容和建议</a></h2>\n<h2></h2>\n'},title:"leetcode day x"}}],["/posts/vuepress%E5%BB%BA%E7%AB%99%E9%85%8D%E7%BD%AE.html",{loader:()=>s.e(869).then(s.bind(s,7725)),meta:{_blog:{title:"vuepress建站配置",author:"",date:"2024-10-31T00:00:00.000Z",category:["CategoryA"],tag:["argorithm","tag B"],excerpt:'\n<h2>网站基本信息</h2>\n<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> author <span class="token operator">=</span> <span class="token string">"前端notes"</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> tags <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"前端"</span><span class="token punctuation">,</span> <span class="token string">"计算机"</span><span class="token punctuation">,</span> <span class="token string">"编程"</span><span class="token punctuation">]</span></span>\n<span class="line"></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>'},title:"vuepress建站配置"}}],["/posts/%E5%85%AB%E8%82%A1%E6%96%87.html",{loader:()=>s.e(631).then(s.bind(s,4457)),meta:{_blog:{title:"八股文",author:"",date:"2024-11-11T00:00:00.000Z",category:["CategoryC"],tag:["tag E"],excerpt:"\n<p>前端开发面试必背八股文</p>\n"},title:"八股文"}}],["/posts/%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E9%A1%B9%E7%9B%AE.html",{loader:()=>s.e(46).then(s.bind(s,2124)),meta:{_blog:{title:"后台管理项目",author:"",date:"2024-11-11T00:00:00.000Z",category:["CategoryC"],tag:["tag E"],excerpt:"\n<p>基于elementui、vue3、koa的后台管理项目</p>\n"},title:"后台管理项目"}}],["/posts/%E5%A6%82%E4%BD%95%E7%BB%99GitHub%E9%A1%B9%E7%9B%AE%E6%8F%90%E4%BA%A4pr.html",{loader:()=>s.e(564).then(s.bind(s,4385)),meta:{_blog:{title:"如何给GitHub项目提交pr",author:"",date:"2024-11-11T00:00:00.000Z",category:["CategoryC"],tag:["tag E"],excerpt:'\n<h2>把GitHub项目fork到自己的仓库</h2>\n<h2>拉取代码到本地进行修改</h2>\n<p>在本地的某个目录下使用</p>\n<div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git clone +你要拉取的项目地址</span>\n<span class="line"></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>'},title:"如何给GitHub项目提交pr"}}],["/posts/%E5%AE%9E%E4%B9%A0%E7%AC%94%E8%AE%B0.html",{loader:()=>s.e(398).then(s.bind(s,3341)),meta:{_blog:{title:"实习笔记",author:"",date:"2024-11-17T00:00:00.000Z",category:["CategoryC"],tag:["tag E"],excerpt:'\n<p>不能使用多次commit，因为commit是同步的，所以会造成性能很慢</p>\n<p>async函数里面使用await，比如下面这个，就能确保先更新完点赞的状态，再showToast</p>\n<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">async</span> <span class="token function">toggleLike</span><span class="token punctuation">(</span><span class="token parameter">postId</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">      console<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token string">\'like\'</span><span class="token punctuation">)</span></span>\n<span class="line">      <span class="token keyword">try</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">const</span> userId <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>userInfo<span class="token punctuation">.</span>userId<span class="token punctuation">;</span></span>\n<span class="line">        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">API</span><span class="token punctuation">.</span><span class="token function">feedbackLike</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>\n<span class="line">          <span class="token literal-property property">postId</span><span class="token operator">:</span> postId<span class="token punctuation">,</span></span>\n<span class="line">          <span class="token literal-property property">userId</span><span class="token operator">:</span> userId<span class="token punctuation">,</span></span>\n<span class="line">          <span class="token literal-property property">commentId</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span></span>\n<span class="line">          <span class="token literal-property property">dataType</span><span class="token operator">:</span> <span class="token string">"post"</span><span class="token punctuation">,</span></span>\n<span class="line">          <span class="token literal-property property">likeFlag</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>item<span class="token punctuation">.</span>isLikedByCurrentUser<span class="token punctuation">,</span></span>\n<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token comment">// 检查响应内容，判断是否成功，并根据响应更新本地状态</span></span>\n<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>response <span class="token operator">===</span> <span class="token string">"点赞成功"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">          <span class="token keyword">this</span><span class="token punctuation">.</span>item<span class="token punctuation">.</span>isLikedByCurrentUser <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">// 点赞成功后将 isLikedByCurrentUser 更新为 true</span></span>\n<span class="line">          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"点赞成功后，this.item="</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">          <span class="token keyword">this</span><span class="token punctuation">.</span>item<span class="token punctuation">.</span>likesCount <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 增加点赞数</span></span>\n<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>response <span class="token operator">===</span> <span class="token string">"取消点赞成功"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">          <span class="token keyword">this</span><span class="token punctuation">.</span>item<span class="token punctuation">.</span>isLikedByCurrentUser <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// 取消点赞后将 isLikedByCurrentUser 更新为 false</span></span>\n<span class="line">          <span class="token keyword">this</span><span class="token punctuation">.</span>item<span class="token punctuation">.</span>likesCount <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 减少点赞数</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">        <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">\'callBackFun\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>\n<span class="line">          <span class="token literal-property property">fun</span><span class="token operator">:</span> <span class="token string">\'updateContent\'</span><span class="token punctuation">,</span></span>\n<span class="line">          <span class="token literal-property property">param</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>item<span class="token punctuation">.</span>postId<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>item <span class="token punctuation">}</span></span>\n<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        console<span class="token punctuation">.</span><span class="token function">timeEnd</span><span class="token punctuation">(</span><span class="token string">\'like\'</span><span class="token punctuation">)</span></span>\n<span class="line">        uni<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>\n<span class="line">          <span class="token literal-property property">title</span><span class="token operator">:</span> response<span class="token punctuation">,</span> <span class="token comment">//newIsLiked === 1 ? \'点赞成功\' : \'取消点赞成功\',</span></span>\n<span class="line">          <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">"none"</span><span class="token punctuation">,</span></span>\n<span class="line">          <span class="token literal-property property">duration</span><span class="token operator">:</span> <span class="token number">2000</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"点赞操作异常:"</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        uni<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>\n<span class="line">          <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">"操作异常"</span><span class="token punctuation">,</span></span>\n<span class="line">          <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">"none"</span><span class="token punctuation">,</span></span>\n<span class="line">          <span class="token literal-property property">duration</span><span class="token operator">:</span> <span class="token number">2000</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">      <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line"></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>'},title:"实习笔记"}}],["/posts/%E5%B8%B8%E8%A7%81%E7%9A%84%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%89%8B%E6%AE%B5.html",{loader:()=>s.e(289).then(s.bind(s,517)),meta:{_blog:{title:"常见的性能优化手段",author:"",date:"2024-11-04T00:00:00.000Z",category:["CategoryA"],tag:["argorithm","tag B"],excerpt:"\n<h2>v-if和v-show</h2>\n<p>v-if和v-show的区别：v-if是针对dom进行的操作，当改变元素的隐藏和显示的时候，需要重新渲染dom结点，造成组件的销毁和重建。而v-show操作的是css属性，类似于display，只会控制某个dom结点是否显示在页面上，但无论显示还是隐藏，dom都会被渲染。</p>\n<p>因此如果有频繁的切换的场景时，我们一般用v-show，以便提高速度；当切换得比较少的时候，我们一般用v-if，这样可以减少不必要的渲染开销</p>\n<h2>watch和computed</h2>\n<p>computed和watch的区别：他们两个都是用于响应式的数据处理，区别是<br>\n1.computed有缓存，如果再次访问返回值的时候，是不会重新触发计算属性的执行的；watch没有缓存，不涉及返回值的缓存<br>\n2.watch常常用于一些开销较大的操作，如果监听的数据有频繁的变化，会造成性能问题。\n事实上computed能做的，watch也都能做，只是computed更加专精一些</p>"},title:"常见的性能优化手段"}}],["/posts/%E7%AE%97%E6%B3%95.html",{loader:()=>s.e(802).then(s.bind(s,878)),meta:{_blog:{title:"算法灵神题单",author:"",date:"2024-11-10T00:00:00.000Z",category:["CategoryC"],tag:["tag E"],excerpt:"<p>算法题单，符号说明：T表示做对，F表示做错，O表示半对</p>"},title:"算法灵神题单"}}],["/test/test.html",{loader:()=>s.e(943).then(s.bind(s,1224)),meta:{title:"Leetcode day 1"}}],["/404.html",{loader:()=>s.e(490).then(s.bind(s,5294)),meta:{title:""}}],["/category/",{loader:()=>s.e(583).then(s.bind(s,2625)),meta:{title:"Categories"}}],["/category/history/",{loader:()=>s.e(572).then(s.bind(s,698)),meta:{title:"Category History"}}],["/category/categorya/",{loader:()=>s.e(159).then(s.bind(s,4372)),meta:{title:"Category CategoryA"}}],["/category/categoryc/",{loader:()=>s.e(989).then(s.bind(s,8773)),meta:{title:"Category CategoryC"}}],["/tag/",{loader:()=>s.e(797).then(s.bind(s,6267)),meta:{title:"Tags"}}],["/tag/wwi/",{loader:()=>s.e(279).then(s.bind(s,9401)),meta:{title:"Tag WWI"}}],["/tag/wwii/",{loader:()=>s.e(14).then(s.bind(s,5958)),meta:{title:"Tag WWII"}}],["/tag/tag-a/",{loader:()=>s.e(448).then(s.bind(s,6695)),meta:{title:"Tag tag A"}}],["/tag/tag-b/",{loader:()=>s.e(965).then(s.bind(s,4330)),meta:{title:"Tag tag B"}}],["/tag/argorithm/",{loader:()=>s.e(321).then(s.bind(s,5619)),meta:{title:"Tag argorithm"}}],["/tag/tag-e/",{loader:()=>s.e(364).then(s.bind(s,8823)),meta:{title:"Tag tag E"}}],["/article/",{loader:()=>s.e(511).then(s.bind(s,6192)),meta:{title:"Articles"}}],["/timeline/",{loader:()=>s.e(464).then(s.bind(s,5278)),meta:{title:"Timeline"}}]])},9354:(n,a,s)=>{s.d(a,{U:()=>e});const e=JSON.parse('{"base":"/","lang":"zh-CN","title":"前端notes","description":"全面的前端笔记","head":[["link",{"rel":"icon","href":"/logo.jpg"}],["meta",{"name":"keywords","content":"前端, 计算机, 编程，前端notes，前端开发，算法，项目"}]],"locales":{}}')},8120:(n,a,s)=>{s.d(a,{K:()=>e});const e=JSON.parse('{"logo":"logo.jpg","lastUpdated":"最近更新","navbar":[{"text":"前端笔记","children":[{"text":"八股文","link":"/posts/八股文","target":"_self"},{"text":"灵神算法题单","link":"/posts/算法.html","target":"_self"}]},{"text":"GithHub","link":"https://github.com/namewyf","target":"_blank"}],"sidebar":["/",{"title":"文章","text":"posts","prefix":"/posts/","children":["","算法","八股文","后台管理项目"]},"/article/"],"locales":{"/":{"selectLanguageName":"English"}},"colorMode":"auto","colorModeSwitch":true,"repo":null,"selectLanguageText":"Languages","selectLanguageAriaLabel":"Select language","sidebarDepth":2,"editLink":true,"editLinkText":"Edit this page","lastUpdatedText":"Last Updated","contributors":true,"contributorsText":"Contributors","notFound":["There\'s nothing here.","How did we get here?","That\'s a Four-Oh-Four.","Looks like we\'ve got some broken links."],"backToHome":"Take me home","openInNewWindow":"open in new window","toggleColorMode":"toggle color mode","toggleSidebar":"toggle sidebar"}')}},n=>{n.O(0,[596,724],(()=>n(n.s=8731))),n.O()}]);