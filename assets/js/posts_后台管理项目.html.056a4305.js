"use strict";(self.webpackChunkfront_end_notes=self.webpackChunkfront_end_notes||[]).push([[46],{2439:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>e,data:()=>l});var p=a(641);const t={},e=(0,a(6262).A)(t,[["render",function(n,s){return(0,p.uX)(),(0,p.CE)("div",null,s[0]||(s[0]=[(0,p.Fv)('<h1 id="后台管理项目" tabindex="-1"><a class="header-anchor" href="#后台管理项目"><span>后台管理项目</span></a></h1><p>基于elementui、vue3的后台管理项目</p><h2 id="前端架构设计" tabindex="-1"><a class="header-anchor" href="#前端架构设计"><span>前端架构设计</span></a></h2><h3 id="_2-8-axios二次封装-下" tabindex="-1"><a class="header-anchor" href="#_2-8-axios二次封装-下"><span>2-8 axios二次封装（下）</span></a></h3><p>构造好request的封装函数后在main.js里进行全局挂载之后才能在组件进行全局使用</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> request <span class="token keyword">from</span> <span class="token string">&#39;./uitils/request&#39;</span><span class="token punctuation">;</span></span>\n<span class="line">app<span class="token punctuation">.</span>config<span class="token punctuation">.</span>globalProperties<span class="token punctuation">.</span>$request <span class="token operator">=</span> request</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>在js里request和request()是不同的，request是将request函数本身赋值给app.config.globalProperties.$request 如果说是request()则是先执行request然后将返回值赋值给app.config.globalProperties.$request</p></blockquote><p>封装完成后，就能在组件里面调用了</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$request</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>\n<span class="line">      <span class="token literal-property property">method</span><span class="token operator">:</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">      <span class="token literal-property property">url</span><span class="token operator">:</span><span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">      <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">{</span></span>\n<span class="line">        <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;jack&#39;</span></span>\n<span class="line">      <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>\n<span class="line">       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;res=&quot;</span><span class="token punctuation">,</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line">  <span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>为了更加方便的进行调用，我们还可以把request函数转换成一个对象，这个对象里有各种请求的方法</p><p>request.js</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token punctuation">[</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;put&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;delete&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;patch&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">    request<span class="token punctuation">[</span>item<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> data<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token comment">//options可以对请求的参数做一些额外的拓展，比如可以传mock:true,或者loading之类的东西</span></span>\n<span class="line">        <span class="token keyword">return</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>\n<span class="line">            url<span class="token punctuation">,</span></span>\n<span class="line">            data<span class="token punctuation">,</span></span>\n<span class="line">            <span class="token literal-property property">method</span><span class="token operator">:</span> item<span class="token punctuation">,</span></span>\n<span class="line">            <span class="token operator">...</span>options</span>\n<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><ol><li>这个地方非常巧妙地把函数request转换为对象request，并且把多个属性添加到request对象里，属性的值是函数</li><li>options可以对请求的参数做一些额外的拓展，比如可以传mock:true,或者loading:true之类的东西</li></ol></blockquote><p>login.vue</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>$request<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;jack&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>\n<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line">  <span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-9-storage二次封装" tabindex="-1"><a class="header-anchor" href="#_2-9-storage二次封装"><span>2-9 storage二次封装</span></a></h3>',16)]))}]]),l=JSON.parse('{"path":"/posts/%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E9%A1%B9%E7%9B%AE.html","title":"后台管理项目","lang":"zh-CN","frontmatter":{"date":"2024-11-11T00:00:00.000Z","category":["CategoryC"],"tag":["tag E"],"sticky":20},"headers":[{"level":2,"title":"前端架构设计","slug":"前端架构设计","link":"#前端架构设计","children":[{"level":3,"title":"2-8 axios二次封装（下）","slug":"_2-8-axios二次封装-下","link":"#_2-8-axios二次封装-下","children":[]},{"level":3,"title":"2-9 storage二次封装","slug":"_2-9-storage二次封装","link":"#_2-9-storage二次封装","children":[]}]}],"git":{"updatedTime":1731598931000,"contributors":[{"name":"namewyf","email":"wyf19892552132@163.com","commits":3}]},"filePathRelative":"posts/后台管理项目.md","excerpt":"\\n<p>基于elementui、vue3的后台管理项目</p>\\n"}')}}]);