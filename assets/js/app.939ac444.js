"use strict";(self.webpackChunkfront_end_notes=self.webpackChunkfront_end_notes||[]).push([[3524],{2798:(n,s,a)=>{a.d(s,{l:()=>e});const e={category:{"/":{path:"/category/",map:{CategoryA:{path:"/category/categorya/",indexes:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14]},CategoryC:{path:"/category/categoryc/",indexes:[15,16,17,18,19,20]}}}},tag:{"/":{path:"/tag/",map:{js:{path:"/tag/js/",indexes:[14]},"tag B":{path:"/tag/tag-b/",indexes:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14]},"tag E":{path:"/tag/tag-e/",indexes:[15,16,17,18,19,20]},argorithm:{path:"/tag/argorithm/",indexes:[0,1,2,3,4,5,6,7,8,9,10,11,12,13]}}}}}},8589:(n,s,a)=>{a.d(s,{M:()=>e});const e=["/posts/%E5%B8%B8%E8%A7%81%E7%9A%84%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%89%8B%E6%AE%B5.html","/posts/vuepress%E5%BB%BA%E7%AB%99%E9%85%8D%E7%BD%AE.html","/posts/leetcode%E9%A2%98%E7%9B%AE.html","/posts/leetcode-day-x.html","/posts/leetcode-day-9.html","/posts/leetcode-day-8.html","/posts/leetcode-day-7.html","/posts/leetcode-day-6.html","/posts/leetcode-day-4.html","/posts/leetcode-day-3.html","/posts/leetcode-day-2.html","/posts/leetcode-day-14.html","/posts/leetcode-day-10.html","/posts/leetcode-day-1.html","/posts/Promise%E7%94%A8%E6%B3%95.html","/posts/%E7%AE%97%E6%B3%95.html","/posts/%E5%AE%9E%E4%B9%A0%E7%AC%94%E8%AE%B0.html","/posts/%E5%A6%82%E4%BD%95%E7%BB%99GitHub%E9%A1%B9%E7%9B%AE%E6%8F%90%E4%BA%A4pr.html","/posts/%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E9%A1%B9%E7%9B%AE.html","/posts/%E5%85%AB%E8%82%A1%E6%96%87.html","/posts/git%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97.html","/post/","/posts/git%E6%8F%90%E4%BA%A4%E8%A7%84%E8%8C%83.html","/posts/%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E9%A1%B9%E7%9B%AE%E8%84%9A%E6%89%8B%E6%9E%B6.html","/posts/%E5%A6%82%E4%BD%95%E6%B3%A8%E5%86%8C%E5%92%8C%E4%BD%BF%E7%94%A8%E5%9F%9F%E5%90%8D.html","/posts/%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0gitignore%E5%B9%B6%E5%88%A0%E9%99%A4%E8%BF%9C%E7%A8%8B%E7%9A%84ignore%E6%96%87%E4%BB%B6.html","/posts/%E6%A8%A1%E6%8B%9F%E9%9D%A2%E8%AF%95%E9%A1%B9%E7%9B%AE%E6%8B%B7%E6%89%931.html","/posts/%E6%B7%B7%E5%90%88%E4%BD%BF%E7%94%A8commonjs%E5%92%8Cesm.html","/posts/%E8%A7%A3%E5%86%B3cursor%E5%8F%AA%E8%83%BD%E7%BB%AD%E6%9D%AF%E4%B8%89%E6%AC%A1%E7%9A%84%E9%97%AE%E9%A2%98.html","/posts/Mysql%E7%9A%84%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6/"]},594:(n,s,a)=>{a.d(s,{U:()=>e});const e={article:{"/":{path:"/article/",indexes:[18,19,16,20,14,15,21,22,23,24,25,26,27,28,29,2,11,17,12,4,5,8,7,6,3,9,0,10,13,1]}},timeline:{"/":{path:"/timeline/",indexes:[2,20,16,11,19,18,17,15,12,4,5,14,8,7,6,3,9,0,10,13,1]}}}},1417:(n,s,a)=>{a.d(s,{B:()=>Q});var e={};a.r(e),a.d(e,{default:()=>m});var t={};a.r(t),a.d(t,{default:()=>g});var p={};a.r(p),a.d(p,{default:()=>P});var o=a(6358),l=a(355),i=a(457),c=a(3349),r=a(5436),d=a(1599),u=a(6385);const m={setup(){(0,u._)()}};var h=a(1781),k=a(9212);const g={enhance:({app:n})=>{n.component("CodeTabs",h.S),n.component("Tabs",k.t)}};var E=a(8913),b=a(9700),v=a(8278),y=a(641),A=a(953),B=a(6076),f=a(7913),w=a(33);const _={class:"article-wrapper"},C={key:0},x=["onClick"],T={class:"title"},j={class:"article-info"},D={key:0,class:"author"},F={key:1,class:"date"},L={key:2,class:"category"},q={key:3,class:"tag"},U=["innerHTML"],Z={__name:"ArticleList",props:{items:{type:Array,required:!0},isTimeline:Boolean},setup:n=>(s,a)=>((0,y.uX)(),(0,y.CE)("div",_,[n.items.length?(0,y.Q3)("",!0):((0,y.uX)(),(0,y.CE)("div",C,"Nothing in here.")),((0,y.uX)(!0),(0,y.CE)(y.FK,null,(0,y.pI)(n.items,(({info:e,path:t})=>((0,y.uX)(),(0,y.CE)("article",{key:t,class:"article",onClick:n=>s.$router.push(t)},[(0,y.Lk)("header",T,(0,w.v_)((n.isTimeline?`${new Date(e.date).toLocaleDateString()}: `:"")+e.title),1),a[0]||(a[0]=(0,y.Lk)("hr",null,null,-1)),(0,y.Lk)("div",j,[e.author?((0,y.uX)(),(0,y.CE)("span",D,"Author: "+(0,w.v_)(e.author),1)):(0,y.Q3)("",!0),e.date&&!n.isTimeline?((0,y.uX)(),(0,y.CE)("span",F,"Date: "+(0,w.v_)(new Date(e.date).toLocaleDateString()),1)):(0,y.Q3)("",!0),e.category?((0,y.uX)(),(0,y.CE)("span",L,"Category: "+(0,w.v_)(e.category.join(", ")),1)):(0,y.Q3)("",!0),e.tag?((0,y.uX)(),(0,y.CE)("span",q,"Tag: "+(0,w.v_)(e.tag.join(", ")),1)):(0,y.Q3)("",!0)]),e.excerpt?((0,y.uX)(),(0,y.CE)("div",{key:0,class:"excerpt",innerHTML:e.excerpt},null,8,U)):(0,y.Q3)("",!0)],8,x)))),128))]))},R={class:"page"},I={__name:"Article",setup(n){const s=(0,B.Om)("article");return(n,a)=>((0,y.uX)(),(0,y.Wv)(f.A,null,{page:(0,y.k6)((()=>[(0,y.Lk)("main",R,[(0,y.bF)(Z,{items:(0,A.R1)(s).items},null,8,["items"])])])),_:1}))}},N={class:"page"},X={class:"category-wrapper"},G={class:"category-num"},S={__name:"Category",setup(n){const s=(0,v.lq)(),a=(0,B.es)("category");return(n,e)=>((0,y.uX)(),(0,y.Wv)(f.A,null,{page:(0,y.k6)((()=>[(0,y.Lk)("main",N,[(0,y.Lk)("div",X,[((0,y.uX)(!0),(0,y.CE)(y.FK,null,(0,y.pI)((0,A.R1)(a).map,(({items:n,path:a},e)=>((0,y.uX)(),(0,y.Wv)((0,A.R1)(v.Wt),{key:e,to:a,active:(0,A.R1)(s).path===a,class:"category"},{default:(0,y.k6)((()=>[(0,y.eW)((0,w.v_)(e)+" ",1),(0,y.Lk)("span",G,(0,w.v_)(n.length),1)])),_:2},1032,["to","active"])))),128))]),(0,y.bF)(Z,{items:(0,A.R1)(a).currentItems??[]},null,8,["items"])])])),_:1}))}},W={class:"page"},H={class:"tag-wrapper"},M={class:"tag-num"},O={__name:"Tag",setup(n){const s=(0,v.lq)(),a=(0,B.es)("tag");return(n,e)=>((0,y.uX)(),(0,y.Wv)(f.A,null,{page:(0,y.k6)((()=>[(0,y.Lk)("main",W,[(0,y.Lk)("div",H,[((0,y.uX)(!0),(0,y.CE)(y.FK,null,(0,y.pI)((0,A.R1)(a).map,(({items:n,path:a},e)=>((0,y.uX)(),(0,y.Wv)((0,A.R1)(v.Wt),{key:e,to:a,active:(0,A.R1)(s).path===a,class:"tag"},{default:(0,y.k6)((()=>[(0,y.eW)((0,w.v_)(e)+" ",1),(0,y.Lk)("span",M,(0,w.v_)(n.length),1)])),_:2},1032,["to","active"])))),128))]),(0,y.bF)(Z,{items:(0,A.R1)(a).currentItems??[]},null,8,["items"])])])),_:1}))}},V={class:"page"},J={__name:"Timeline",setup(n){const s=(0,B.Om)("timeline");return(n,a)=>((0,y.uX)(),(0,y.Wv)(f.A,null,{page:(0,y.k6)((()=>[(0,y.Lk)("main",V,[a[0]||(a[0]=(0,y.Lk)("h1",{class:"timeline-title"},"Timeline",-1)),(0,y.bF)(Z,{items:(0,A.R1)(s).items,"is-timeline":""},null,8,["items"])])])),_:1}))}},P=(0,v.re)({layouts:{Article:I,Category:S,Tag:O,Timeline:J}}),Q=[o,l,i,c,r,d,e,t,E,b,p].map((n=>n.default)).filter(Boolean)},6159:(n,s,a)=>{a.d(s,{J:()=>t,c:()=>e});const e=JSON.parse('{"/posts/":"/post/"}'),t=Object.fromEntries([["/",{loader:()=>a.e(4470).then(a.bind(a,5437)),meta:{title:"首页"}}],["/get-started.html",{loader:()=>a.e(3642).then(a.bind(a,2621)),meta:{title:"Get Started"}}],["/notes/%E5%85%AB%E8%82%A1%E6%96%87.html",{loader:()=>a.e(9829).then(a.bind(a,9209)),meta:{title:"前端八股文笔记大全"}}],["/notes/%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E4%BD%8E%E4%BB%A3%E7%A0%81.html",{loader:()=>a.e(7065).then(a.bind(a,7365)),meta:{title:"后台管理低代码"}}],["/notes/%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E9%A1%B9%E7%9B%AE.html",{loader:()=>a.e(8652).then(a.bind(a,5488)),meta:{title:"后台管理项目0-1搭建笔记"}}],["/notes/%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E9%A1%B9%E7%9B%AE%E8%84%9A%E6%89%8B%E6%9E%B6.html",{loader:()=>a.e(8961).then(a.bind(a,6108)),meta:{title:"后台管理项目脚手架0-1搭建笔记"}}],["/notes/%E7%AE%97%E6%B3%95.html",{loader:()=>a.e(8530).then(a.bind(a,565)),meta:{title:"leetcode算法笔记大全"}}],["/posts/Promise%E7%94%A8%E6%B3%95.html",{loader:()=>a.e(2996).then(a.bind(a,1132)),meta:{_blog:{title:"Promise面试题",author:"",date:"2024-11-05T00:00:00.000Z",category:["CategoryA"],tag:["js","tag B"],excerpt:'\n<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> promise1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'promise1\'</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'1\'</span><span class="token punctuation">,</span> promise1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>'},title:"Promise面试题"}}],["/post/",{loader:()=>a.e(8937).then(a.bind(a,1180)),meta:{_blog:{title:"你好",author:"",date:null,category:[],tag:[],excerpt:'\n<blockquote>\n<p>贴心的前端学习路线，全面的编程知识百科</p>\n<p>作者：<a href="https://github.com/namewyf" target="_blank" rel="noopener noreferrer">前端notes</a></p>\n<p>本站地址：<a href="https://namewyf.github.io" target="_blank" rel="noopener noreferrer">https://namewyf.github.io</a></p>\n</blockquote>\n<h2>本站内容</h2>\n<ul>\n<li><a href="/posts/%E7%AE%97%E6%B3%95.html" target="_blank">leetcode算法notes</a></li>\n<li><a href="/posts/%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E9%A1%B9%E7%9B%AE.html" target="_blank">后台管理项目0-1开发notes</a></li>\n<li><a href="/posts/%E5%85%AB%E8%82%A1%E6%96%87.html" target="_blank">前端八股文notes</a></li>\n</ul>'},title:"你好"}}],["/posts/git%E6%8F%90%E4%BA%A4%E8%A7%84%E8%8C%83.html",{loader:()=>a.e(1251).then(a.bind(a,343)),meta:{_blog:{title:"git commit提交规范",author:"",date:null,category:[],tag:[],excerpt:"\n<p>feat: 新功能、新特性\nfix: 修改 bug\nperf: 更改代码，性能优化\nrefactor: 代码重构（重构，在不影响代码内部行为、功能下的代码修改）\ndocs: 文档修改\nstyle: 代码格式修改, 注意不是 css 修改（例如分号修改）\ntest: 测试用例新增、修改\nbuild: 影响项目构建或依赖项修改\nrevert: 恢复上一次提交\nci: 持续集成相关文件修改\nchore: 其他修改（不在上述类型中的修改）\nrelease: 发布新版本\nworkflow: 工作流相关文件修改</p>\n"},title:"git commit提交规范"}}],["/posts/git%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97.html",{loader:()=>a.e(6033).then(a.bind(a,2700)),meta:{_blog:{title:"git操作指南",author:"",date:"2024-11-27T00:00:00.000Z",category:["CategoryC"],tag:["tag E"],excerpt:'\n<h2>重命名一个git分支</h2>\n<div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git checkout old-branch-name</span>\n<span class="line">git branch -m new-branch-name</span>\n<span class="line"></span>\n<span class="line">删除远程分支（如果已经推送过）：</span>\n<span class="line">git push origin --delete old-branch-name</span>\n<span class="line">推送新的分支名称到远程仓库：</span>\n<span class="line">git push origin new-branch-name</span>\n<span class="line">设置新的分支为默认跟踪分支：</span>\n<span class="line">git push --set-upstream origin new-branch-name</span>\n<span class="line"></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>'},title:"git操作指南"}}],["/posts/leetcode-day-1.html",{loader:()=>a.e(7146).then(a.bind(a,3653)),meta:{_blog:{title:"Leetcode day 1",author:"",date:"2024-10-31T00:00:00.000Z",category:["CategoryA"],tag:["argorithm","tag B"],excerpt:'\n<h2><a class="header-anchor" href="#刷题内容和建议"><span></span></a><a href="https://docs.qq.com/doc/DUG9UR2ZUc3BjRUdY" target="_blank" rel="noopener noreferrer">刷题内容和建议</a></h2>\n<h2>704.二分查找</h2>\n<p><a href="https://leetcode.cn/problems/binary-search/" target="_blank" rel="noopener noreferrer">https://leetcode.cn/problems/binary-search/</a></p>'},title:"Leetcode day 1"}}],["/posts/leetcode-day-10.html",{loader:()=>a.e(4708).then(a.bind(a,8896)),meta:{_blog:{title:"leetcode day 10",author:"",date:"2024-11-08T00:00:00.000Z",category:["CategoryA"],tag:["argorithm","tag B"],excerpt:'\n<h2><a class="header-anchor" href="#刷题内容和建议"><span></span></a><a href="https://docs.qq.com/doc/DUG1mZ3pib0J0T05T" target="_blank" rel="noopener noreferrer">刷题内容和建议</a></h2>\n<h2>232. 用栈实现队列</h2>\n<p>1.定义一个数据结构的时候他的属性要有默认值，比如这里要有默认值为空数组，否则就是undefined<br>\n2.方法对于属性值的调用，记得一定要写this呀<br>\n3.不同的并列的方法可以相互调用，要学会善用这一方法，省下很多功夫</p>'},title:"leetcode day 10"}}],["/posts/leetcode-day-14.html",{loader:()=>a.e(1336).then(a.bind(a,5961)),meta:{_blog:{title:"leetcode day 14",author:"",date:"2024-11-12T00:00:00.000Z",category:["CategoryA"],tag:["argorithm","tag B"],excerpt:'\n<h2><a class="header-anchor" href="#刷题内容和建议"><span></span></a><a href="https://docs.qq.com/doc/DUHN0ZVJuRmVYeWNv" target="_blank" rel="noopener noreferrer">刷题内容和建议</a></h2>\n<h2>226.翻转二叉树 （优先掌握递归）</h2>\n<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token doc-comment comment">/**</span>\n<span class="line"> * Definition for a binary tree node.</span>\n<span class="line"> * function TreeNode(val, left, right) <span class="token punctuation">{</span></span>\n<span class="line"> *     this.val = (val===undefined ? 0 : val)</span>\n<span class="line"> *     this.left = (left===undefined ? null : left)</span>\n<span class="line"> *     this.right = (right===undefined ? null : right)</span>\n<span class="line"> * <span class="token punctuation">}</span></span>\n<span class="line"> */</span></span>\n<span class="line"><span class="token doc-comment comment">/**</span>\n<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>TreeNode<span class="token punctuation">}</span></span> <span class="token parameter">root</span></span>\n<span class="line"> * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>TreeNode<span class="token punctuation">}</span></span></span>\n<span class="line"> */</span></span>\n<span class="line"><span class="token keyword">var</span> <span class="token function-variable function">invertTree</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    </span>\n<span class="line">    <span class="token keyword">function</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">if</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">            <span class="token punctuation">[</span>root<span class="token punctuation">.</span>left<span class="token punctuation">,</span>root<span class="token punctuation">.</span>right<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>root<span class="token punctuation">.</span>right<span class="token punctuation">,</span>root<span class="token punctuation">.</span>left<span class="token punctuation">]</span></span>\n<span class="line">            <span class="token function">func</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">)</span></span>\n<span class="line">            <span class="token function">func</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">)</span></span>\n<span class="line">            <span class="token keyword">return</span></span>\n<span class="line">        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span></span>\n<span class="line">            <span class="token keyword">return</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token function">func</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span></span>\n<span class="line">    <span class="token keyword">return</span> root</span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>'},title:"leetcode day 14"}}],["/posts/leetcode-day-2.html",{loader:()=>a.e(8227).then(a.bind(a,1275)),meta:{_blog:{title:"Leetcode day 2",author:"",date:"2024-11-03T00:00:00.000Z",category:["CategoryA"],tag:["argorithm","tag B"],excerpt:'\n<h2><a class="header-anchor" href="#刷题内容和建议"><span></span></a><a href="https://docs.qq.com/doc/DUGRwWXNOVEpyaVpG" target="_blank" rel="noopener noreferrer">刷题内容和建议</a></h2>\n<h2>209.长度最小的子数组</h2>\n<p><a href="https://leetcode.cn/problems/minimum-size-subarray-sum/" target="_blank" rel="noopener noreferrer">https://leetcode.cn/problems/minimum-size-subarray-sum/</a></p>'},title:"Leetcode day 2"}}],["/posts/leetcode-day-3.html",{loader:()=>a.e(9644).then(a.bind(a,3220)),meta:{_blog:{title:"Leetcode day 3",author:"",date:"2024-11-04T00:00:00.000Z",category:["CategoryA"],tag:["argorithm","tag B"],excerpt:'\n<h2><a class="header-anchor" href="#刷题内容和建议"><span></span></a><a href="https://docs.qq.com/doc/DUGdqYWNYeGhlaVR6" target="_blank" rel="noopener noreferrer">刷题内容和建议</a></h2>\n<h2>203.移除链表元素</h2>\n<p><a href="https://leetcode.cn/problems/remove-linked-list-elements/description/" target="_blank" rel="noopener noreferrer">https://leetcode.cn/problems/remove-linked-list-elements/description/</a></p>'},title:"Leetcode day 3"}}],["/posts/leetcode-day-4.html",{loader:()=>a.e(4661).then(a.bind(a,8865)),meta:{_blog:{title:"leetcode day 4",author:"",date:"2024-11-05T00:00:00.000Z",category:["CategoryA"],tag:["argorithm","tag B"],excerpt:'\n<p><a href="https://docs.qq.com/doc/DUFNjYUxYRHRVWklp" target="_blank" rel="noopener noreferrer">刷题内容和建议</a></p>\n<h2>24. 两两交换链表中的节点</h2>\n<p><a href="https://leetcode.cn/problems/swap-nodes-in-pairs/description/" target="_blank" rel="noopener noreferrer">https://leetcode.cn/problems/swap-nodes-in-pairs/description/</a>\n注意画图，以防弄错</p>'},title:"leetcode day 4"}}],["/posts/leetcode-day-6.html",{loader:()=>a.e(6183).then(a.bind(a,4566)),meta:{_blog:{title:"leetcode day 6",author:"",date:"2024-11-05T00:00:00.000Z",category:["CategoryA"],tag:["argorithm","tag B"],excerpt:'\n<h2><a class="header-anchor" href="#刷题内容和建议"><span></span></a><a href="https://docs.qq.com/doc/DUEtFSGdreWRuR2p4" target="_blank" rel="noopener noreferrer">刷题内容和建议</a></h2>\n<h2>242.有效的字母异位词</h2>\n<p><a href="https://leetcode.cn/problems/valid-anagram/" target="_blank" rel="noopener noreferrer">https://leetcode.cn/problems/valid-anagram/</a></p>'},title:"leetcode day 6"}}],["/posts/leetcode-day-7.html",{loader:()=>a.e(9712).then(a.bind(a,898)),meta:{_blog:{title:"leetcode day 7",author:"",date:"2024-11-05T00:00:00.000Z",category:["CategoryA"],tag:["argorithm","tag B"],excerpt:'\n<h2><a class="header-anchor" href="#刷题内容和建议"><span></span></a><a href="https://docs.qq.com/doc/DUElCb1NyTVpXa0Jj" target="_blank" rel="noopener noreferrer">刷题内容和建议</a></h2>\n<h2>454.四数相加II</h2>\n<p><a href="https://leetcode.cn/problems/4sum-ii/" target="_blank" rel="noopener noreferrer">https://leetcode.cn/problems/4sum-ii/</a></p>'},title:"leetcode day 7"}}],["/posts/leetcode-day-8.html",{loader:()=>a.e(313).then(a.bind(a,5425)),meta:{_blog:{title:"leetcode day 8",author:"",date:"2024-11-06T00:00:00.000Z",category:["CategoryA"],tag:["argorithm","tag B"],excerpt:'\n<h2><a class="header-anchor" href="#刷题内容和建议"><span></span></a><a href="https://docs.qq.com/doc/DUGdsY2JFaFhDRVZH" target="_blank" rel="noopener noreferrer">刷题内容和建议</a></h2>\n<h2>344. 反转字符串</h2>\n<p><a href="https://leetcode.cn/problems/reverse-string/description/" target="_blank" rel="noopener noreferrer">https://leetcode.cn/problems/reverse-string/description/</a></p>'},title:"leetcode day 8"}}],["/posts/leetcode-day-9.html",{loader:()=>a.e(7650).then(a.bind(a,8246)),meta:{_blog:{title:"leetcode day 9",author:"",date:"2024-11-07T00:00:00.000Z",category:["CategoryA"],tag:["argorithm","tag B"],excerpt:'\n<h2><a class="header-anchor" href="#刷题内容和建议"><span></span></a><a href="https://docs.qq.com/doc/DUHVXSnZNaXpVUHN4" target="_blank" rel="noopener noreferrer">刷题内容和建议</a></h2>\n<h2>151. 反转字符串中的单词</h2>\n<p><a href="https://leetcode.cn/problems/reverse-words-in-a-string/description/" target="_blank" rel="noopener noreferrer">https://leetcode.cn/problems/reverse-words-in-a-string/description/</a></p>'},title:"leetcode day 9"}}],["/posts/leetcode-day-x.html",{loader:()=>a.e(7481).then(a.bind(a,2745)),meta:{_blog:{title:"leetcode day x",author:"",date:"2024-11-05T00:00:00.000Z",category:["CategoryA"],tag:["argorithm","tag B"],excerpt:'\n<h2><a class="header-anchor" href="#刷题内容和建议"><span></span></a><a href="https://docs.qq.com/doc/DUEtFSGdreWRuR2p4" target="_blank" rel="noopener noreferrer">刷题内容和建议</a></h2>\n<h2></h2>\n'},title:"leetcode day x"}}],["/posts/leetcode%E9%A2%98%E7%9B%AE.html",{loader:()=>a.e(2969).then(a.bind(a,667)),meta:{_blog:{title:"leetcode题目",author:"",date:"2024-12-03T00:00:00.000Z",category:["CategoryA"],tag:["argorithm","tag B"],excerpt:'\n<h3>F136. 只出现一次的数字</h3>\n<ol>\n<li>异或运算，^，先会把两边的数字转换为二进制，然后进行异或运算，如果两边的数字相同，那么结果就是0，如果两边的数字不相同，那么结果就是1</li>\n<li>for of和for in的区别:for of遍历的是数组/对象中的值，for in遍历的是对象中的键</li>\n</ol>\n<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token doc-comment comment">/**</span>\n<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums</span></span>\n<span class="line"> * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span></span>\n<span class="line"> */</span></span>\n<span class="line"><span class="token keyword">var</span> <span class="token function-variable function">singleNumber</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">let</span> ans <span class="token operator">=</span> <span class="token number">0</span></span>\n<span class="line">    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> element <span class="token keyword">of</span> nums<span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">        ans<span class="token operator">^=</span> element</span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token keyword">return</span> ans</span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>'},title:"leetcode题目"}}],["/posts/vuepress%E5%BB%BA%E7%AB%99%E9%85%8D%E7%BD%AE.html",{loader:()=>a.e(7869).then(a.bind(a,7725)),meta:{_blog:{title:"vuepress建站配置",author:"",date:"2024-10-31T00:00:00.000Z",category:["CategoryA"],tag:["argorithm","tag B"],excerpt:'\n<h2>网站基本信息</h2>\n<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> author <span class="token operator">=</span> <span class="token string">"前端notes"</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> tags <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"前端"</span><span class="token punctuation">,</span> <span class="token string">"计算机"</span><span class="token punctuation">,</span> <span class="token string">"编程"</span><span class="token punctuation">]</span></span>\n<span class="line"></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>'},title:"vuepress建站配置"}}],["/posts/%E5%85%AB%E8%82%A1%E6%96%87.html",{loader:()=>a.e(6631).then(a.bind(a,3569)),meta:{_blog:{title:"前端八股文笔记大全",author:"",date:"2024-11-11T00:00:00.000Z",category:["CategoryC"],tag:["tag E"],excerpt:"\n<p>前端开发面试必背八股文</p>\n"},title:"前端八股文笔记大全"}}],["/posts/%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E9%A1%B9%E7%9B%AE.html",{loader:()=>a.e(1046).then(a.bind(a,2718)),meta:{_blog:{title:"后台管理项目0-1笔记大全",author:"",date:"2024-11-11T00:00:00.000Z",category:["CategoryC"],tag:["tag E"],excerpt:"\n<p>基于elementui、vue3、koa的后台管理项目</p>\n"},title:"后台管理项目0-1笔记大全"}}],["/posts/%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E9%A1%B9%E7%9B%AE%E8%84%9A%E6%89%8B%E6%9E%B6.html",{loader:()=>a.e(923).then(a.bind(a,2035)),meta:{_blog:{title:"后台管理项目脚手架",author:"",date:null,category:[],tag:[],excerpt:'\n<h2>0 项目介绍</h2>\n<p>项目地址：<a href="https://github.com/namewyf/v-cli" target="_blank" rel="noopener noreferrer">https://github.com/namewyf/v-cli</a></p>\n<h2>2 Commander命令的使用</h2>\n<p>新建一个文件夹，命名为v-cli</p>\n<div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">npm init</span>\n<span class="line"></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>'},title:"后台管理项目脚手架"}}],["/posts/%E5%A6%82%E4%BD%95%E6%B3%A8%E5%86%8C%E5%92%8C%E4%BD%BF%E7%94%A8%E5%9F%9F%E5%90%8D.html",{loader:()=>a.e(7086).then(a.bind(a,9505)),meta:{_blog:{title:"如何注册和使用域名",author:"",date:null,category:[],tag:[],excerpt:'\n<h2>购买域名</h2>\n<p>这里我推荐使用<a href="https://hpanel.hostinger.com/" target="_blank" rel="noopener noreferrer">https://hpanel.hostinger.com/</a></p>\n<p>打开网站后注册，点击Domains-&gt;get a new domain搜索你想要的域名\n</p>\n<p>点击购买，这里使用支付宝方式付款</p>\n<h2>邮件确认</h2>\n<p>这一步很重要，千万不要漏了，购买完毕后你的注册邮箱会收到一封确认邮件，你需要在14天内点击确认，否则就会过期\n</p>'},title:"如何注册和使用域名"}}],["/posts/%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0gitignore%E5%B9%B6%E5%88%A0%E9%99%A4%E8%BF%9C%E7%A8%8B%E7%9A%84ignore%E6%96%87%E4%BB%B6.html",{loader:()=>a.e(9852).then(a.bind(a,5975)),meta:{_blog:{title:"如何修改gitignore并删除远程的ignore文件",author:"",date:null,category:[],tag:[],excerpt:'\n<h2>背景</h2>\n<p>有时候我们新建一个项目，忘了创建gitignore文件，导致项目被git管理，而且很多日志文件和模块都被上传到了github仓库；而gitignore只对没有commit过的文件夹有效</p>\n<h2>目标</h2>\n<p>想把项目从git仓库中删除，保留本地的代码，并且添加.gitingore文件</p>\n<h2>解决</h2>\n<ol>\n<li>跟目录修改 gitignore文件</li>\n<li>执行：\n删除本地目录下的缓存</li>\n</ol>\n<div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git rm -r --cached .</span>\n<span class="line"></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>'},title:"如何修改gitignore并删除远程的ignore文件"}}],["/posts/%E5%A6%82%E4%BD%95%E7%BB%99GitHub%E9%A1%B9%E7%9B%AE%E6%8F%90%E4%BA%A4pr.html",{loader:()=>a.e(7564).then(a.bind(a,4385)),meta:{_blog:{title:"如何给GitHub项目提交pr",author:"",date:"2024-11-11T00:00:00.000Z",category:["CategoryC"],tag:["tag E"],excerpt:'\n<h2>把GitHub项目fork到自己的仓库</h2>\n<h2>拉取代码到本地进行修改</h2>\n<p>在本地的某个目录下使用</p>\n<div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git clone +你要拉取的项目地址</span>\n<span class="line"></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>'},title:"如何给GitHub项目提交pr"}}],["/posts/%E5%AE%9E%E4%B9%A0%E7%AC%94%E8%AE%B0.html",{loader:()=>a.e(2398).then(a.bind(a,3341)),meta:{_blog:{title:"实习笔记",author:"",date:"2024-11-17T00:00:00.000Z",category:["CategoryC"],tag:["tag E"],excerpt:'\n<p>不能使用多次commit，因为commit是同步的，所以会造成性能很慢</p>\n<p>async函数里面使用await，比如下面这个，就能确保先更新完点赞的状态，再showToast</p>\n<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">async</span> <span class="token function">toggleLike</span><span class="token punctuation">(</span><span class="token parameter">postId</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">      console<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token string">\'like\'</span><span class="token punctuation">)</span></span>\n<span class="line">      <span class="token keyword">try</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">const</span> userId <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>userInfo<span class="token punctuation">.</span>userId<span class="token punctuation">;</span></span>\n<span class="line">        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">API</span><span class="token punctuation">.</span><span class="token function">feedbackLike</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>\n<span class="line">          <span class="token literal-property property">postId</span><span class="token operator">:</span> postId<span class="token punctuation">,</span></span>\n<span class="line">          <span class="token literal-property property">userId</span><span class="token operator">:</span> userId<span class="token punctuation">,</span></span>\n<span class="line">          <span class="token literal-property property">commentId</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span></span>\n<span class="line">          <span class="token literal-property property">dataType</span><span class="token operator">:</span> <span class="token string">"post"</span><span class="token punctuation">,</span></span>\n<span class="line">          <span class="token literal-property property">likeFlag</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>item<span class="token punctuation">.</span>isLikedByCurrentUser<span class="token punctuation">,</span></span>\n<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token comment">// 检查响应内容，判断是否成功，并根据响应更新本地状态</span></span>\n<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>response <span class="token operator">===</span> <span class="token string">"点赞成功"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">          <span class="token keyword">this</span><span class="token punctuation">.</span>item<span class="token punctuation">.</span>isLikedByCurrentUser <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">// 点赞成功后将 isLikedByCurrentUser 更新为 true</span></span>\n<span class="line">          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"点赞成功后，this.item="</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">          <span class="token keyword">this</span><span class="token punctuation">.</span>item<span class="token punctuation">.</span>likesCount <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 增加点赞数</span></span>\n<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>response <span class="token operator">===</span> <span class="token string">"取消点赞成功"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">          <span class="token keyword">this</span><span class="token punctuation">.</span>item<span class="token punctuation">.</span>isLikedByCurrentUser <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// 取消点赞后将 isLikedByCurrentUser 更新为 false</span></span>\n<span class="line">          <span class="token keyword">this</span><span class="token punctuation">.</span>item<span class="token punctuation">.</span>likesCount <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 减少点赞数</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">        <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">\'callBackFun\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>\n<span class="line">          <span class="token literal-property property">fun</span><span class="token operator">:</span> <span class="token string">\'updateContent\'</span><span class="token punctuation">,</span></span>\n<span class="line">          <span class="token literal-property property">param</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>item<span class="token punctuation">.</span>postId<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>item <span class="token punctuation">}</span></span>\n<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        console<span class="token punctuation">.</span><span class="token function">timeEnd</span><span class="token punctuation">(</span><span class="token string">\'like\'</span><span class="token punctuation">)</span></span>\n<span class="line">        uni<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>\n<span class="line">          <span class="token literal-property property">title</span><span class="token operator">:</span> response<span class="token punctuation">,</span> <span class="token comment">//newIsLiked === 1 ? \'点赞成功\' : \'取消点赞成功\',</span></span>\n<span class="line">          <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">"none"</span><span class="token punctuation">,</span></span>\n<span class="line">          <span class="token literal-property property">duration</span><span class="token operator">:</span> <span class="token number">2000</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"点赞操作异常:"</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        uni<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>\n<span class="line">          <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">"操作异常"</span><span class="token punctuation">,</span></span>\n<span class="line">          <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">"none"</span><span class="token punctuation">,</span></span>\n<span class="line">          <span class="token literal-property property">duration</span><span class="token operator">:</span> <span class="token number">2000</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">      <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line"></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>'},title:"实习笔记"}}],["/posts/%E5%B8%B8%E8%A7%81%E7%9A%84%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%89%8B%E6%AE%B5.html",{loader:()=>a.e(289).then(a.bind(a,517)),meta:{_blog:{title:"常见的性能优化手段",author:"",date:"2024-11-04T00:00:00.000Z",category:["CategoryA"],tag:["argorithm","tag B"],excerpt:"\n<h2>v-if和v-show</h2>\n<p>v-if和v-show的区别：v-if是针对dom进行的操作，当改变元素的隐藏和显示的时候，需要重新渲染dom结点，造成组件的销毁和重建。而v-show操作的是css属性，类似于display，只会控制某个dom结点是否显示在页面上，但无论显示还是隐藏，dom都会被渲染。</p>\n<p>因此如果有频繁的切换的场景时，我们一般用v-show，以便提高速度；当切换得比较少的时候，我们一般用v-if，这样可以减少不必要的渲染开销</p>\n<h2>watch和computed</h2>\n<p>computed和watch的区别：他们两个都是用于响应式的数据处理，区别是<br>\n1.computed有缓存，如果再次访问返回值的时候，是不会重新触发计算属性的执行的；watch没有缓存，不涉及返回值的缓存<br>\n2.watch常常用于一些开销较大的操作，如果监听的数据有频繁的变化，会造成性能问题。\n事实上computed能做的，watch也都能做，只是computed更加专精一些</p>"},title:"常见的性能优化手段"}}],["/posts/%E6%A8%A1%E6%8B%9F%E9%9D%A2%E8%AF%95%E9%A1%B9%E7%9B%AE%E6%8B%B7%E6%89%931.html",{loader:()=>a.e(7429).then(a.bind(a,3309)),meta:{_blog:{title:"模拟面试项目拷打1",author:"",date:null,category:[],tag:[],excerpt:"\n<h2>自我介绍</h2>\n<ol>\n<li>只用介绍自己的技术栈即可</li>\n<li>项目经历可以详细扩展一下，介绍一下项目是在什么时候写的</li>\n</ol>\n<h2>实习期间遇到过哪些问题？</h2>\n<ol>\n<li>代码量精简的具体数据写出来</li>\n<li>评论区防止xss攻击</li>\n<li>分包产生启动时的加载速度提升的数值写出来</li>\n<li>小程序分包的具体实现</li>\n<li>减少请求数的数量</li>\n<li>css编译性能提升多少写出来</li>\n</ol>\n<h2>后台管理项目</h2>\n<ol>\n<li>脚手架如何适配我的项目</li>\n<li>结合前端工程化来回答</li>\n</ol>"},title:"模拟面试项目拷打1"}}],["/posts/%E6%B7%B7%E5%90%88%E4%BD%BF%E7%94%A8commonjs%E5%92%8Cesm.html",{loader:()=>a.e(837).then(a.bind(a,4815)),meta:{_blog:{title:"如何混合使用commonjs和esm",author:"",date:null,category:[],tag:[],excerpt:"\n<h2>背景</h2>\n<p>在npm的各种模块里，有的模块最新引入，使用的是esm，有些是commonjs。</p>\n<p>如果说回退包的版本，都使用commonjs，那么又会错失很多更新的内容。</p>\n<h2>解决</h2>\n<h3>1. 修改后缀混合使用commonjs和esm。</h3>\n<p>当我们把文件命名为<code>.mjs</code>时，Node.js会默认使用esm模块化规范。</p>\n<p>如果使用<code>.cjs</code>，Node.js会默认使用commonjs模块化规范。</p>\n<p>如果是<code>.js</code>，则会看package.json的type字段，如果为module，则使用esm，否则使用commonjs。</p>"},title:"如何混合使用commonjs和esm"}}],["/posts/%E7%AE%97%E6%B3%95.html",{loader:()=>a.e(6564).then(a.bind(a,8654)),meta:{_blog:{title:"leetcode算法笔记大全",author:"",date:"2024-11-10T00:00:00.000Z",category:["CategoryC"],tag:["tag E"],excerpt:"<p>算法题单，符号说明：T表示做对，F表示做错，O表示半对</p>"},title:"leetcode算法笔记大全"}}],["/posts/%E8%A7%A3%E5%86%B3cursor%E5%8F%AA%E8%83%BD%E7%BB%AD%E6%9D%AF%E4%B8%89%E6%AC%A1%E7%9A%84%E9%97%AE%E9%A2%98.html",{loader:()=>a.e(7397).then(a.bind(a,5293)),meta:{_blog:{title:"解决cursor只能续杯三次的问题",author:"",date:null,category:[],tag:[],excerpt:'\n<h2>问题描述</h2>\n<p>cursor 只能续杯三次，续杯后，会提示你已经达到上限，无法再续杯。</p>\n<h2>解决方案</h2>\n<p>可以使用这个项目来解决，下载并运行cursor_id_modifier_v2.0.0_windows_amd64.exe\n<a href="https://github.com/namewyf/go-cursor-help" target="_blank" rel="noopener noreferrer">https://github.com/namewyf/go-cursor-help</a></p>\n'},title:"解决cursor只能续杯三次的问题"}}],["/test/test.html",{loader:()=>a.e(3943).then(a.bind(a,1224)),meta:{title:"Leetcode day 1"}}],["/posts/Mysql%E7%9A%84%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6/",{loader:()=>a.e(2513).then(a.bind(a,6828)),meta:{_blog:{title:"Mysql的并发控制实验",author:"",date:null,category:[],tag:[],excerpt:'\n<ol>\n<li>使⽤studentdb数据库中的student_info表格。\n（1）打开MySQL客户机A，对student_info表格施加表级共享锁后查看该表格。</li>\n</ol>\n<div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">USE studentsdb;</span>\n<span class="line">LOCK TABLES student_info READ;</span>\n<span class="line">SELECT * FROM student_info;</span>\n<span class="line"></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>'},title:"Mysql的并发控制实验"}}],["/404.html",{loader:()=>a.e(7490).then(a.bind(a,5294)),meta:{title:""}}],["/category/",{loader:()=>a.e(3583).then(a.bind(a,2625)),meta:{title:"Categories"}}],["/category/categorya/",{loader:()=>a.e(3159).then(a.bind(a,4372)),meta:{title:"Category CategoryA"}}],["/category/categoryc/",{loader:()=>a.e(9989).then(a.bind(a,8773)),meta:{title:"Category CategoryC"}}],["/tag/",{loader:()=>a.e(1797).then(a.bind(a,6267)),meta:{title:"Tags"}}],["/tag/js/",{loader:()=>a.e(1597).then(a.bind(a,6443)),meta:{title:"Tag js"}}],["/tag/tag-b/",{loader:()=>a.e(965).then(a.bind(a,4330)),meta:{title:"Tag tag B"}}],["/tag/tag-e/",{loader:()=>a.e(7364).then(a.bind(a,8823)),meta:{title:"Tag tag E"}}],["/tag/argorithm/",{loader:()=>a.e(5321).then(a.bind(a,5619)),meta:{title:"Tag argorithm"}}],["/article/",{loader:()=>a.e(7511).then(a.bind(a,6192)),meta:{title:"Articles"}}],["/timeline/",{loader:()=>a.e(5464).then(a.bind(a,5278)),meta:{title:"Timeline"}}]])},9354:(n,s,a)=>{a.d(s,{U:()=>e});const e=JSON.parse('{"base":"/","lang":"zh-CN","title":"前端notes","description":"全面的前端笔记","head":[["link",{"rel":"icon","href":"/logo.jpg"}],["meta",{"name":"keywords","content":"前端, 计算机, 编程，前端notes，前端开发，算法，项目"}]],"locales":{}}')},8120:(n,s,a)=>{a.d(s,{K:()=>e});const e=JSON.parse('{"logo":"logo.jpg","lastUpdated":"最近更新","navbar":[{"text":"前端笔记","children":[{"text":"八股文","link":"/posts/八股文","target":"_self"},{"text":"灵神算法题单","link":"/posts/算法.html","target":"_self"}]},{"text":"GithHub","link":"https://github.com/namewyf","target":"_blank"}],"sidebar":["/",{"title":"笔记","text":"系统笔记","prefix":"/notes/","children":["算法","八股文","后台管理项目","后台管理项目脚手架"]},{"title":"文章","text":"技术文章","prefix":"/posts/","children":["常见的性能优化手段","如何添加gitignore并删除远程的ignore文件","如何给GitHub项目提交pr","git操作指南","Promise用法","混合使用commonjs和esm","模拟面试项目拷打1","如何注册和使用域名","git提交规范",{"text":"Mysql的并发控制实验","link":"/posts/Mysql的并发控制/"}]}],"locales":{"/":{"selectLanguageName":"English"}},"colorMode":"auto","colorModeSwitch":true,"repo":null,"selectLanguageText":"Languages","selectLanguageAriaLabel":"Select language","sidebarDepth":2,"editLink":true,"editLinkText":"Edit this page","lastUpdatedText":"Last Updated","contributors":true,"contributorsText":"Contributors","notFound":["There\'s nothing here.","How did we get here?","That\'s a Four-Oh-Four.","Looks like we\'ve got some broken links."],"backToHome":"Take me home","openInNewWindow":"open in new window","toggleColorMode":"toggle color mode","toggleSidebar":"toggle sidebar"}')}},n=>{n.O(0,[3596,3724],(()=>n(n.s=8731))),n.O()}]);